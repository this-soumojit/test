{"ast":null,"code":"// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// export default function FileUpload() {\n//   const [file, setFile] = useState(null);\n//   const navigate = useNavigate();\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     formData.append(\"mriScan\", file);\n\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:5000/api/upload\",\n//         formData\n//       );\n//       navigate(`/results/${res.data.scanId}`);\n//     } catch (err) {\n//       alert(\"Upload failed!\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n//       <button onClick={handleUpload}>Upload</button>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// export default function FileUpload() {\n//   const [file, setFile] = useState(null);\n//   const [prediction, setPrediction] = useState(null); // To store result\n//   const [loading, setLoading] = useState(false); // To manage loading state\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     formData.append(\"mriScan\", file);\n\n//     setLoading(true); // Start loading state\n\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:5000/api/upload\",\n//         formData\n//       );\n//       console.log(\"Backend Response:\", res.data); // DEBUG\n//       setPrediction(res.data.data.prediction); // store result to display\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       alert(\"Upload failed!\");\n//     } finally {\n//       setLoading(false); // Stop loading state\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h2>Upload Brain MRI Image</h2>\n//       <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n//       <button onClick={handleUpload} disabled={!file || loading}>\n//         {loading ? \"Uploading...\" : \"Upload\"}\n//       </button>\n\n//       {prediction && (\n//         <div style={{ marginTop: \"20px\" }}>\n//           <h3>Prediction Result:</h3>\n//           <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>{prediction}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\"; // Make sure you import useNavigate\n\n// export default function FileUpload() {\n//   const [file, setFile] = useState(null);\n//   const [loading, setLoading] = useState(false); // To manage loading state\n//   const navigate = useNavigate(); // Initialize navigate\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     formData.append(\"mriScan\", file);\n\n//     setLoading(true); // Start loading state\n\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:5000/api/upload\",\n//         formData\n//       );\n//       console.log(\"Backend Response:\", res.data); // DEBUG\n//       const predictionData = res.data.data.prediction; // Save the prediction data\n//       console.log(\"Prediction Data:\", res.data.data.prediction);\n\n//       // Make sure predictionData is received before navigating\n//       if (predictionData) {\n//         // Navigate to the results page with the prediction data\n//         navigate(\"/results\", { state: { prediction: predictionData } });\n//       } else {\n//         alert(\"No prediction data received.\");\n//       }\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       alert(\"Upload failed!\");\n//     } finally {\n//       setLoading(false); // Stop loading state\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h2>Upload Brain MRI Image</h2>\n//       <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n//       <button onClick={handleUpload} disabled={!file || loading}>\n//         {loading ? \"Uploading...\" : \"Upload\"}\n//       </button>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n\n// const FileUpload = () => {\n//   const [file, setFile] = useState(null);\n//   const [prediction, setPrediction] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//     setPrediction(\"\");\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!file) return;\n\n//     const formData = new FormData();\n//     formData.append(\"image\", file);\n\n//     setLoading(true);\n//     setPrediction(\"\");\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/upload\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       const data = await response.json();\n//       setPrediction(data.prediction || \"No prediction received.\");\n//     } catch (error) {\n//       console.error(\"Error during prediction:\", error);\n//       setPrediction(\"Error during prediction. Check the server.\");\n//     }\n\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div style={{ textAlign: \"center\", padding: \"40px\" }}>\n//       <h1>üß† Brain MRI Disease Detector</h1>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"file\"\n//           accept=\"image/*\"\n//           onChange={handleFileChange}\n//           required\n//         />\n//         <br />\n//         <button type=\"submit\" style={{ marginTop: \"20px\" }}>\n//           Predict\n//         </button>\n//       </form>\n\n//       <div style={{ marginTop: \"30px\", fontSize: \"18px\" }}>\n//         {loading && <span>‚è≥ Processing...</span>}\n//         {prediction && !loading && <span>‚úÖ Prediction: {prediction}</span>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default FileUpload;","map":{"version":3,"names":[],"sources":["C:/Users/User/Desktop/brain-mri-detection-master/client/src/components/FileUpload.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// export default function FileUpload() {\n//   const [file, setFile] = useState(null);\n//   const navigate = useNavigate();\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     formData.append(\"mriScan\", file);\n\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:5000/api/upload\",\n//         formData\n//       );\n//       navigate(`/results/${res.data.scanId}`);\n//     } catch (err) {\n//       alert(\"Upload failed!\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n//       <button onClick={handleUpload}>Upload</button>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// export default function FileUpload() {\n//   const [file, setFile] = useState(null);\n//   const [prediction, setPrediction] = useState(null); // To store result\n//   const [loading, setLoading] = useState(false); // To manage loading state\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     formData.append(\"mriScan\", file);\n\n//     setLoading(true); // Start loading state\n\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:5000/api/upload\",\n//         formData\n//       );\n//       console.log(\"Backend Response:\", res.data); // DEBUG\n//       setPrediction(res.data.data.prediction); // store result to display\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       alert(\"Upload failed!\");\n//     } finally {\n//       setLoading(false); // Stop loading state\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h2>Upload Brain MRI Image</h2>\n//       <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n//       <button onClick={handleUpload} disabled={!file || loading}>\n//         {loading ? \"Uploading...\" : \"Upload\"}\n//       </button>\n\n//       {prediction && (\n//         <div style={{ marginTop: \"20px\" }}>\n//           <h3>Prediction Result:</h3>\n//           <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>{prediction}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\"; // Make sure you import useNavigate\n\n// export default function FileUpload() {\n//   const [file, setFile] = useState(null);\n//   const [loading, setLoading] = useState(false); // To manage loading state\n//   const navigate = useNavigate(); // Initialize navigate\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     formData.append(\"mriScan\", file);\n\n//     setLoading(true); // Start loading state\n\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:5000/api/upload\",\n//         formData\n//       );\n//       console.log(\"Backend Response:\", res.data); // DEBUG\n//       const predictionData = res.data.data.prediction; // Save the prediction data\n//       console.log(\"Prediction Data:\", res.data.data.prediction);\n\n\n//       // Make sure predictionData is received before navigating\n//       if (predictionData) {\n//         // Navigate to the results page with the prediction data\n//         navigate(\"/results\", { state: { prediction: predictionData } });\n//       } else {\n//         alert(\"No prediction data received.\");\n//       }\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       alert(\"Upload failed!\");\n//     } finally {\n//       setLoading(false); // Stop loading state\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h2>Upload Brain MRI Image</h2>\n//       <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n//       <button onClick={handleUpload} disabled={!file || loading}>\n//         {loading ? \"Uploading...\" : \"Upload\"}\n//       </button>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from \"react\";\n\n// const FileUpload = () => {\n//   const [file, setFile] = useState(null);\n//   const [prediction, setPrediction] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//     setPrediction(\"\");\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!file) return;\n\n//     const formData = new FormData();\n//     formData.append(\"image\", file);\n\n//     setLoading(true);\n//     setPrediction(\"\");\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/upload\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n\n//       const data = await response.json();\n//       setPrediction(data.prediction || \"No prediction received.\");\n//     } catch (error) {\n//       console.error(\"Error during prediction:\", error);\n//       setPrediction(\"Error during prediction. Check the server.\");\n//     }\n\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div style={{ textAlign: \"center\", padding: \"40px\" }}>\n//       <h1>üß† Brain MRI Disease Detector</h1>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"file\"\n//           accept=\"image/*\"\n//           onChange={handleFileChange}\n//           required\n//         />\n//         <br />\n//         <button type=\"submit\" style={{ marginTop: \"20px\" }}>\n//           Predict\n//         </button>\n//       </form>\n\n//       <div style={{ marginTop: \"30px\", fontSize: \"18px\" }}>\n//         {loading && <span>‚è≥ Processing...</span>}\n//         {prediction && !loading && <span>‚úÖ Prediction: {prediction}</span>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default FileUpload;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAoBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}