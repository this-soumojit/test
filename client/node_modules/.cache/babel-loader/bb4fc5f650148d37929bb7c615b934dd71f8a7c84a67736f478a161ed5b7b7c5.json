{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\brain-mri-detection-master\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import {\n//   Button,\n//   Container,\n//   Typography,\n//   Box,\n//   LinearProgress,\n//   Card,\n//   CardMedia,\n//   IconButton,\n//   Alert,\n// } from \"@mui/material\";\n// import UploadIcon from \"@mui/icons-material/Upload\";\n// import CloseIcon from \"@mui/icons-material/Close\";\n// import ReplayIcon from \"@mui/icons-material/Replay\";\n\n// const Home = () => {\n//   const [file, setFile] = useState(null);\n//   const [previewUrl, setPreviewUrl] = useState(\"\");\n//   const [isUploading, setIsUploading] = useState(false);\n//   const [uploadProgress, setUploadProgress] = useState(0);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   const handleFileChange = (e) => {\n//     const selectedFile = e.target.files[0];\n//     if (!selectedFile) return;\n\n//     // Validate file type\n//     const validTypes = [\n//       \"image/dicom\",\n//       \"image/nifti\",\n//       \"image/jpeg\",\n//       \"image/png\",\n//       \"application/dicom\",\n//     ];\n//     if (\n//       !validTypes.includes(selectedFile.type) &&\n//       !selectedFile.name.match(/\\.(dcm|nii|jpg|jpeg|png)$/i)\n//     ) {\n//       setError(\n//         \"Unsupported file format. Please upload DICOM, NIfTI, JPEG, or PNG.\"\n//       );\n//       return;\n//     }\n\n//     setFile(selectedFile);\n//     setError(null);\n\n//     // Create preview for image files\n//     if (\n//       selectedFile.type.match(\"image.*\") &&\n//       !selectedFile.type.includes(\"dicom\")\n//     ) {\n//       const reader = new FileReader();\n//       reader.onload = (event) => setPreviewUrl(event.target.result);\n//       reader.readAsDataURL(selectedFile);\n//     } else {\n//       setPreviewUrl(\"\");\n//     }\n//   };\n\n//   const handleClearFile = () => {\n//     setFile(null);\n//     setPreviewUrl(\"\");\n//     setError(null);\n//   };\n\n//   const handleUpload = async () => {\n//     if (!file) {\n//       setError(\"Please select a file first\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"mriScan\", file); // Must match backend field name\n\n//     try {\n//       setIsUploading(true);\n//       setError(null);\n//       setUploadProgress(0);\n\n//       const response = await axios.post(\n//         \"http://localhost:5000/api/upload\",\n//         formData,\n//         {\n//           onUploadProgress: (progressEvent) => {\n//             const progress = Math.round(\n//               (progressEvent.loaded * 100) / progressEvent.total\n//             );\n//             setUploadProgress(progress);\n//           },\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//           timeout: 60000, // 30 seconds timeout\n//         }\n//       );\n\n//       console.log(\"API Response:\", response.data); // Debug log\n\n//       if (!response.data.success) {\n//         throw new Error(response.data.message || \"Prediction failed\");\n//       }\n\n//       // Navigate with all available data\n//       navigate(\"/results\", {\n//         state: {\n//           prediction:\n//             response.data.prediction ||\n//             response.data.data?.prediction ||\n//             \"No prediction available\",\n//           confidence:\n//             response.data.confidence || response.data.data?.confidence,\n//           image: previewUrl,\n//           rawData: response.data, // For debugging\n//         },\n//         replace: true,\n//       });\n//     } catch (err) {\n//       console.error(\"Upload error:\", err.response?.data || err.message);\n//       setError(\n//         err.response?.data?.message ||\n//           err.message ||\n//           \"Analysis failed. Please try again.\"\n//       );\n//     } finally {\n//       setIsUploading(false);\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4 }}>\n//       <Typography\n//         variant=\"h3\"\n//         component=\"h1\"\n//         gutterBottom\n//         align=\"center\"\n//         sx={{ fontWeight: 700 }}\n//       >\n//         Brain MRI Analysis\n//       </Typography>\n\n//       <Typography\n//         variant=\"subtitle1\"\n//         align=\"center\"\n//         color=\"text.secondary\"\n//         sx={{ mb: 4 }}\n//       >\n//         Upload MRI scans for tumor detection and classification\n//       </Typography>\n\n//       <Card sx={{ p: 3, mb: 3, border: \"1px dashed #1976d2\" }}>\n//         <input\n//           accept=\".dcm,.nii,.jpg,.jpeg,.png\"\n//           style={{ display: \"none\" }}\n//           id=\"mri-upload-input\"\n//           type=\"file\"\n//           onChange={handleFileChange}\n//           disabled={isUploading}\n//         />\n//         <label htmlFor=\"mri-upload-input\">\n//           <Button\n//             variant=\"contained\"\n//             component=\"span\"\n//             startIcon={<UploadIcon />}\n//             size=\"large\"\n//             disabled={isUploading}\n//             fullWidth\n//             sx={{ py: 2 }}\n//           >\n//             Select MRI File\n//           </Button>\n//         </label>\n\n//         {file && (\n//           <Box sx={{ mt: 2, display: \"flex\", alignItems: \"center\" }}>\n//             <Typography variant=\"body1\" sx={{ flexGrow: 1 }}>\n//               {file.name} ({Math.round(file.size / 1024)} KB)\n//             </Typography>\n//             <IconButton\n//               onClick={handleClearFile}\n//               disabled={isUploading}\n//               color=\"error\"\n//             >\n//               <CloseIcon />\n//             </IconButton>\n//           </Box>\n//         )}\n\n//         {previewUrl && (\n//           <Box sx={{ mt: 3, textAlign: \"center\" }}>\n//             <CardMedia\n//               component=\"img\"\n//               image={previewUrl}\n//               alt=\"Preview\"\n//               sx={{\n//                 maxHeight: 300,\n//                 maxWidth: \"100%\",\n//                 objectFit: \"contain\",\n//                 borderRadius: 1,\n//               }}\n//             />\n//           </Box>\n//         )}\n\n//         <Button\n//           variant=\"contained\"\n//           color=\"primary\"\n//           onClick={handleUpload}\n//           disabled={!file || isUploading}\n//           fullWidth\n//           sx={{ mt: 3, py: 2 }}\n//         >\n//           {isUploading ? (\n//             <>\n//               Analyzing... {uploadProgress}%\n//               <LinearProgress\n//                 variant=\"determinate\"\n//                 value={uploadProgress}\n//                 sx={{ ml: 2, width: \"100px\" }}\n//               />\n//             </>\n//           ) : (\n//             \"Analyze Scan\"\n//           )}\n//         </Button>\n\n//         {error && (\n//           <Alert severity=\"error\" sx={{ mt: 2 }}>\n//             {error}\n//           </Alert>\n//         )}\n//       </Card>\n\n//       <Card sx={{ p: 3 }}>\n//         <Typography variant=\"h6\" gutterBottom>\n//           Instructions\n//         </Typography>\n//         <ul style={{ paddingLeft: \"20px\" }}>\n//           <li>Supported formats: DICOM (.dcm), NIfTI (.nii), JPEG/PNG</li>\n//           <li>Minimum resolution: 128Ã—128 pixels</li>\n//           <li>Maximum file size: 20MB</li>\n//           <li>Analysis typically takes 10-30 seconds</li>\n//         </ul>\n//       </Card>\n\n//       <Button\n//         variant=\"contained\"\n//         size=\"large\"\n//         onClick={() => navigate(\"/evaluation-report\")}\n//         sx={{\n//           mt: 4,\n//           background: \"#00bcd4\",\n//           color: \"white\",\n//           padding: \"10px 24px\",\n//           fontSize: \"1rem\",\n//           display: \"block\",\n//           mx: \"auto\",\n//           \"&:hover\": {\n//             background: \"#0097a7\",\n//           },\n//         }}\n//       >\n//         Get Evaluation Report\n//       </Button>\n//     </Container>\n//   );\n\n// };\n\n// export default Home;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button,\n// Container,\nTypography, Box, CircularProgress, Card, CardMedia, IconButton, Alert } from \"@mui/material\";\nimport UploadIcon from \"@mui/icons-material/Upload\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport brainImage from \"../assets/bg.jpg\"; // Use the same background as the landing page\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors = {\n  primary: \"#00bcd4\",\n  // Slightly muted blue/teal to complement the background\n  secondary: \"#ff4081\",\n  // Accent color for hover effects\n  text: \"#f5f5f5\" // Light text color for better contrast\n};\nconst Home = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (!selectedFile) return;\n\n    // Validate file type\n    const validTypes = [\"image/dicom\", \"image/nifti\", \"image/jpeg\", \"image/png\", \"application/dicom\"];\n    if (!validTypes.includes(selectedFile.type) && !selectedFile.name.match(/\\.(dcm|nii|jpg|jpeg|png)$/i)) {\n      setError(\"Unsupported file format. Please upload DICOM, NIfTI, JPEG, or PNG.\");\n      return;\n    }\n    setFile(selectedFile);\n    setError(null);\n\n    // Create preview for image files\n    if (selectedFile.type.match(\"image.*\") && !selectedFile.type.includes(\"dicom\")) {\n      const reader = new FileReader();\n      reader.onload = event => setPreviewUrl(event.target.result);\n      reader.readAsDataURL(selectedFile);\n    } else {\n      setPreviewUrl(\"\");\n    }\n  };\n  const handleClearFile = () => {\n    setFile(null);\n    setPreviewUrl(\"\");\n    setError(null);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please select a file first\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"mriScan\", file); // Must match backend field name\n\n    try {\n      var _response$data$data, _response$data$data2;\n      setIsUploading(true);\n      setError(null);\n      setUploadProgress(0);\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\n        onUploadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(progress);\n        },\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        timeout: 60000 // 30 seconds timeout\n      });\n      console.log(\"API Response:\", response.data); // Debug log\n\n      if (!response.data.success) {\n        throw new Error(response.data.message || \"Prediction failed\");\n      }\n\n      // Navigate with all available data\n      navigate(\"/results\", {\n        state: {\n          prediction: response.data.prediction || ((_response$data$data = response.data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.prediction) || \"No prediction available\",\n          confidence: response.data.confidence || ((_response$data$data2 = response.data.data) === null || _response$data$data2 === void 0 ? void 0 : _response$data$data2.confidence),\n          image: previewUrl,\n          rawData: response.data // For debugging\n        },\n        replace: true\n      });\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error(\"Upload error:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message || \"Analysis failed. Please try again.\");\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      // Ensure the container takes the full screen height\n      background: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.7)), url(${brainImage})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        background: \"rgba(0, 0, 0, 0.6)\",\n        borderRadius: 2,\n        p: 4,\n        width: \"100%\",\n        maxWidth: 600,\n        boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.3)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        component: \"h1\",\n        gutterBottom: true,\n        align: \"center\",\n        sx: {\n          fontWeight: 700,\n          color: colors.text,\n          mb: 3,\n          textAlign: \"center\",\n          background: `linear-gradient(45deg, ${colors.primary}, ${colors.secondary})`,\n          WebkitBackgroundClip: \"text\",\n          WebkitTextFillColor: \"transparent\"\n        },\n        children: \"Brain MRI Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        align: \"center\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 4\n        },\n        children: \"Upload MRI scans for tumor detection and classification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 3,\n          mb: 3,\n          borderRadius: 2,\n          backgroundColor: \"#333\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \".dcm,.nii,.jpg,.jpeg,.png\",\n          style: {\n            display: \"none\"\n          },\n          id: \"mri-upload-input\",\n          type: \"file\",\n          onChange: handleFileChange,\n          disabled: isUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mri-upload-input\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"span\",\n            startIcon: /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 26\n            }, this),\n            size: \"large\",\n            disabled: isUploading,\n            fullWidth: true,\n            sx: {\n              py: 2,\n              background: \"#0097a7\",\n              // Slightly muted teal to blend better\n              \"&:hover\": {\n                background: \"#007c8a\" // Darker shade on hover\n              },\n              borderRadius: 1.5,\n              // Rounded corners\n              boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\" // Subtle shadow\n            },\n            children: \"Select MRI File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), file && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              flexGrow: 1\n            },\n            children: [file.name, \" (\", Math.round(file.size / 1024), \" KB)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleClearFile,\n            disabled: isUploading,\n            color: \"error\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this), previewUrl && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            textAlign: \"center\",\n            backgroundColor: \"transparent\",\n            // Remove background overlay\n            padding: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            image: previewUrl,\n            alt: \"Preview\",\n            sx: {\n              maxHeight: 300,\n              maxWidth: \"100%\",\n              objectFit: \"contain\",\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleUpload,\n          disabled: !file || isUploading,\n          fullWidth: true,\n          sx: {\n            mt: 3,\n            py: 2,\n            background: \"#0097a7\",\n            // Match the theme color\n            \"&:hover\": {\n              background: \"#007c8a\" // Darker shade on hover\n            },\n            borderRadius: 1.5,\n            boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\" // Subtle shadow\n          },\n          children: isUploading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Analyzing... \", uploadProgress, \"%\", /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24,\n              sx: {\n                color: \"white\",\n                ml: 2\n              },\n              thickness: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : \"Analyze Scan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 3,\n          background: \"rgba(0, 0, 0, 0.6)\",\n          borderRadius: 2,\n          mt: 4,\n          boxShadow: \"0px 4px 15px rgba(0, 0, 0, 0.4)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            color: colors.text,\n            textAlign: \"center\"\n          },\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            paddingLeft: \"20px\",\n            color: colors.text\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Supported formats: DICOM (.dcm), NIfTI (.nii), JPEG/PNG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Minimum resolution: 128\\xD7128 pixels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Maximum file size: 20MB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Analysis typically takes 10-30 seconds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        onClick: () => navigate(\"/evaluation-report\"),\n        sx: {\n          mt: 4,\n          background: colors.primary,\n          color: \"white\",\n          padding: \"10px 24px\",\n          fontSize: \"1rem\",\n          display: \"block\",\n          mx: \"auto\",\n          \"&:hover\": {\n            background: \"#0097a7\"\n          }\n        },\n        children: \"Get Evaluation Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"qJaFw1WpTZ6jt+vYvkq1kh1E4JM=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Button","Typography","Box","CircularProgress","Card","CardMedia","IconButton","Alert","UploadIcon","CloseIcon","brainImage","jsxDEV","_jsxDEV","Fragment","_Fragment","colors","primary","secondary","text","Home","_s","file","setFile","previewUrl","setPreviewUrl","isUploading","setIsUploading","uploadProgress","setUploadProgress","error","setError","navigate","handleFileChange","e","selectedFile","target","files","validTypes","includes","type","name","match","reader","FileReader","onload","event","result","readAsDataURL","handleClearFile","handleUpload","formData","FormData","append","_response$data$data","_response$data$data2","response","post","onUploadProgress","progressEvent","progress","Math","round","loaded","total","headers","timeout","console","log","data","success","Error","message","state","prediction","confidence","image","rawData","replace","err","_err$response","_err$response2","_err$response2$data","sx","display","justifyContent","alignItems","minHeight","background","backgroundSize","backgroundPosition","children","borderRadius","p","width","maxWidth","boxShadow","variant","component","gutterBottom","align","fontWeight","color","mb","textAlign","WebkitBackgroundClip","WebkitTextFillColor","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","accept","style","id","onChange","disabled","htmlFor","startIcon","size","fullWidth","py","mt","flexGrow","onClick","padding","alt","maxHeight","objectFit","ml","thickness","severity","paddingLeft","fontSize","mx","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/brain-mri-detection-master/client/src/pages/Home.js"],"sourcesContent":["\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import {\n//   Button,\n//   Container,\n//   Typography,\n//   Box,\n//   LinearProgress,\n//   Card,\n//   CardMedia,\n//   IconButton,\n//   Alert,\n// } from \"@mui/material\";\n// import UploadIcon from \"@mui/icons-material/Upload\";\n// import CloseIcon from \"@mui/icons-material/Close\";\n// import ReplayIcon from \"@mui/icons-material/Replay\";\n\n// const Home = () => {\n//   const [file, setFile] = useState(null);\n//   const [previewUrl, setPreviewUrl] = useState(\"\");\n//   const [isUploading, setIsUploading] = useState(false);\n//   const [uploadProgress, setUploadProgress] = useState(0);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   const handleFileChange = (e) => {\n//     const selectedFile = e.target.files[0];\n//     if (!selectedFile) return;\n\n//     // Validate file type\n//     const validTypes = [\n//       \"image/dicom\",\n//       \"image/nifti\",\n//       \"image/jpeg\",\n//       \"image/png\",\n//       \"application/dicom\",\n//     ];\n//     if (\n//       !validTypes.includes(selectedFile.type) &&\n//       !selectedFile.name.match(/\\.(dcm|nii|jpg|jpeg|png)$/i)\n//     ) {\n//       setError(\n//         \"Unsupported file format. Please upload DICOM, NIfTI, JPEG, or PNG.\"\n//       );\n//       return;\n//     }\n\n//     setFile(selectedFile);\n//     setError(null);\n\n//     // Create preview for image files\n//     if (\n//       selectedFile.type.match(\"image.*\") &&\n//       !selectedFile.type.includes(\"dicom\")\n//     ) {\n//       const reader = new FileReader();\n//       reader.onload = (event) => setPreviewUrl(event.target.result);\n//       reader.readAsDataURL(selectedFile);\n//     } else {\n//       setPreviewUrl(\"\");\n//     }\n//   };\n\n//   const handleClearFile = () => {\n//     setFile(null);\n//     setPreviewUrl(\"\");\n//     setError(null);\n//   };\n\n//   const handleUpload = async () => {\n//     if (!file) {\n//       setError(\"Please select a file first\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"mriScan\", file); // Must match backend field name\n\n//     try {\n//       setIsUploading(true);\n//       setError(null);\n//       setUploadProgress(0);\n\n//       const response = await axios.post(\n//         \"http://localhost:5000/api/upload\",\n//         formData,\n//         {\n//           onUploadProgress: (progressEvent) => {\n//             const progress = Math.round(\n//               (progressEvent.loaded * 100) / progressEvent.total\n//             );\n//             setUploadProgress(progress);\n//           },\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//           timeout: 60000, // 30 seconds timeout\n//         }\n//       );\n\n//       console.log(\"API Response:\", response.data); // Debug log\n\n//       if (!response.data.success) {\n//         throw new Error(response.data.message || \"Prediction failed\");\n//       }\n\n//       // Navigate with all available data\n//       navigate(\"/results\", {\n//         state: {\n//           prediction:\n//             response.data.prediction ||\n//             response.data.data?.prediction ||\n//             \"No prediction available\",\n//           confidence:\n//             response.data.confidence || response.data.data?.confidence,\n//           image: previewUrl,\n//           rawData: response.data, // For debugging\n//         },\n//         replace: true,\n//       });\n//     } catch (err) {\n//       console.error(\"Upload error:\", err.response?.data || err.message);\n//       setError(\n//         err.response?.data?.message ||\n//           err.message ||\n//           \"Analysis failed. Please try again.\"\n//       );\n//     } finally {\n//       setIsUploading(false);\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4 }}>\n//       <Typography\n//         variant=\"h3\"\n//         component=\"h1\"\n//         gutterBottom\n//         align=\"center\"\n//         sx={{ fontWeight: 700 }}\n//       >\n//         Brain MRI Analysis\n//       </Typography>\n\n//       <Typography\n//         variant=\"subtitle1\"\n//         align=\"center\"\n//         color=\"text.secondary\"\n//         sx={{ mb: 4 }}\n//       >\n//         Upload MRI scans for tumor detection and classification\n//       </Typography>\n\n//       <Card sx={{ p: 3, mb: 3, border: \"1px dashed #1976d2\" }}>\n//         <input\n//           accept=\".dcm,.nii,.jpg,.jpeg,.png\"\n//           style={{ display: \"none\" }}\n//           id=\"mri-upload-input\"\n//           type=\"file\"\n//           onChange={handleFileChange}\n//           disabled={isUploading}\n//         />\n//         <label htmlFor=\"mri-upload-input\">\n//           <Button\n//             variant=\"contained\"\n//             component=\"span\"\n//             startIcon={<UploadIcon />}\n//             size=\"large\"\n//             disabled={isUploading}\n//             fullWidth\n//             sx={{ py: 2 }}\n//           >\n//             Select MRI File\n//           </Button>\n//         </label>\n\n//         {file && (\n//           <Box sx={{ mt: 2, display: \"flex\", alignItems: \"center\" }}>\n//             <Typography variant=\"body1\" sx={{ flexGrow: 1 }}>\n//               {file.name} ({Math.round(file.size / 1024)} KB)\n//             </Typography>\n//             <IconButton\n//               onClick={handleClearFile}\n//               disabled={isUploading}\n//               color=\"error\"\n//             >\n//               <CloseIcon />\n//             </IconButton>\n//           </Box>\n//         )}\n\n//         {previewUrl && (\n//           <Box sx={{ mt: 3, textAlign: \"center\" }}>\n//             <CardMedia\n//               component=\"img\"\n//               image={previewUrl}\n//               alt=\"Preview\"\n//               sx={{\n//                 maxHeight: 300,\n//                 maxWidth: \"100%\",\n//                 objectFit: \"contain\",\n//                 borderRadius: 1,\n//               }}\n//             />\n//           </Box>\n//         )}\n\n//         <Button\n//           variant=\"contained\"\n//           color=\"primary\"\n//           onClick={handleUpload}\n//           disabled={!file || isUploading}\n//           fullWidth\n//           sx={{ mt: 3, py: 2 }}\n//         >\n//           {isUploading ? (\n//             <>\n//               Analyzing... {uploadProgress}%\n//               <LinearProgress\n//                 variant=\"determinate\"\n//                 value={uploadProgress}\n//                 sx={{ ml: 2, width: \"100px\" }}\n//               />\n//             </>\n//           ) : (\n//             \"Analyze Scan\"\n//           )}\n//         </Button>\n\n//         {error && (\n//           <Alert severity=\"error\" sx={{ mt: 2 }}>\n//             {error}\n//           </Alert>\n//         )}\n//       </Card>\n\n//       <Card sx={{ p: 3 }}>\n//         <Typography variant=\"h6\" gutterBottom>\n//           Instructions\n//         </Typography>\n//         <ul style={{ paddingLeft: \"20px\" }}>\n//           <li>Supported formats: DICOM (.dcm), NIfTI (.nii), JPEG/PNG</li>\n//           <li>Minimum resolution: 128Ã—128 pixels</li>\n//           <li>Maximum file size: 20MB</li>\n//           <li>Analysis typically takes 10-30 seconds</li>\n//         </ul>\n//       </Card>\n\n//       <Button\n//         variant=\"contained\"\n//         size=\"large\"\n//         onClick={() => navigate(\"/evaluation-report\")}\n//         sx={{\n//           mt: 4,\n//           background: \"#00bcd4\",\n//           color: \"white\",\n//           padding: \"10px 24px\",\n//           fontSize: \"1rem\",\n//           display: \"block\",\n//           mx: \"auto\",\n//           \"&:hover\": {\n//             background: \"#0097a7\",\n//           },\n//         }}\n//       >\n//         Get Evaluation Report\n//       </Button>\n//     </Container>\n//   );\n  \n// };\n\n// export default Home;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Button,\n  // Container,\n  Typography,\n  Box,\n  CircularProgress,\n  Card,\n  CardMedia,\n  IconButton,\n  Alert,\n} from \"@mui/material\";\nimport UploadIcon from \"@mui/icons-material/Upload\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport brainImage from \"../assets/bg.jpg\"; // Use the same background as the landing page\n\nconst colors = {\n  primary: \"#00bcd4\", // Slightly muted blue/teal to complement the background\n  secondary: \"#ff4081\", // Accent color for hover effects\n  text: \"#f5f5f5\", // Light text color for better contrast\n};\n\nconst Home = () => {\n  const [file, setFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (!selectedFile) return;\n\n    // Validate file type\n    const validTypes = [\n      \"image/dicom\",\n      \"image/nifti\",\n      \"image/jpeg\",\n      \"image/png\",\n      \"application/dicom\",\n    ];\n    if (\n      !validTypes.includes(selectedFile.type) &&\n      !selectedFile.name.match(/\\.(dcm|nii|jpg|jpeg|png)$/i)\n    ) {\n      setError(\n        \"Unsupported file format. Please upload DICOM, NIfTI, JPEG, or PNG.\"\n      );\n      return;\n    }\n\n    setFile(selectedFile);\n    setError(null);\n\n    // Create preview for image files\n    if (\n      selectedFile.type.match(\"image.*\") &&\n      !selectedFile.type.includes(\"dicom\")\n    ) {\n      const reader = new FileReader();\n      reader.onload = (event) => setPreviewUrl(event.target.result);\n      reader.readAsDataURL(selectedFile);\n    } else {\n      setPreviewUrl(\"\");\n    }\n  };\n\n  const handleClearFile = () => {\n    setFile(null);\n    setPreviewUrl(\"\");\n    setError(null);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please select a file first\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"mriScan\", file); // Must match backend field name\n\n    try {\n      setIsUploading(true);\n      setError(null);\n      setUploadProgress(0);\n\n      const response = await axios.post(\n        \"http://localhost:5000/api/upload\",\n        formData,\n        {\n          onUploadProgress: (progressEvent) => {\n            const progress = Math.round(\n              (progressEvent.loaded * 100) / progressEvent.total\n            );\n            setUploadProgress(progress);\n          },\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n          timeout: 60000, // 30 seconds timeout\n        }\n      );\n\n      console.log(\"API Response:\", response.data); // Debug log\n\n      if (!response.data.success) {\n        throw new Error(response.data.message || \"Prediction failed\");\n      }\n\n      // Navigate with all available data\n      navigate(\"/results\", {\n        state: {\n          prediction:\n            response.data.prediction ||\n            response.data.data?.prediction ||\n            \"No prediction available\",\n          confidence:\n            response.data.confidence || response.data.data?.confidence,\n          image: previewUrl,\n          rawData: response.data, // For debugging\n        },\n        replace: true,\n      });\n    } catch (err) {\n      console.error(\"Upload error:\", err.response?.data || err.message);\n      setError(\n        err.response?.data?.message ||\n          err.message ||\n          \"Analysis failed. Please try again.\"\n      );\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"100vh\", // Ensure the container takes the full screen height\n        background: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.7)), url(${brainImage})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <Box\n        sx={{\n          background: \"rgba(0, 0, 0, 0.6)\",\n          borderRadius: 2,\n          p: 4,\n          width: \"100%\",\n          maxWidth: 600,\n          boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.3)\",\n        }}\n      >\n        <Typography\n          variant=\"h3\"\n          component=\"h1\"\n          gutterBottom\n          align=\"center\"\n          sx={{\n            fontWeight: 700,\n            color: colors.text,\n            mb: 3,\n            textAlign: \"center\",\n            background: `linear-gradient(45deg, ${colors.primary}, ${colors.secondary})`,\n            WebkitBackgroundClip: \"text\",\n            WebkitTextFillColor: \"transparent\",\n          }}\n        >\n          Brain MRI Analysis\n        </Typography>\n\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"text.secondary\"\n          sx={{ mb: 4 }}\n        >\n          Upload MRI scans for tumor detection and classification\n        </Typography>\n\n        <Card sx={{ p: 3, mb: 3, borderRadius: 2, backgroundColor: \"#333\" }}>\n          <input\n            accept=\".dcm,.nii,.jpg,.jpeg,.png\"\n            style={{ display: \"none\" }}\n            id=\"mri-upload-input\"\n            type=\"file\"\n            onChange={handleFileChange}\n            disabled={isUploading}\n          />\n          <label htmlFor=\"mri-upload-input\">\n            <Button\n              variant=\"contained\"\n              component=\"span\"\n              startIcon={<UploadIcon />}\n              size=\"large\"\n              disabled={isUploading}\n              fullWidth\n              sx={{\n                py: 2,\n                background: \"#0097a7\", // Slightly muted teal to blend better\n                \"&:hover\": {\n                  background: \"#007c8a\", // Darker shade on hover\n                },\n                borderRadius: 1.5, // Rounded corners\n                boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\", // Subtle shadow\n              }}\n            >\n              Select MRI File\n            </Button>\n          </label>\n\n          {file && (\n            <Box sx={{ mt: 2, display: \"flex\", alignItems: \"center\" }}>\n              <Typography variant=\"body1\" sx={{ flexGrow: 1 }}>\n                {file.name} ({Math.round(file.size / 1024)} KB)\n              </Typography>\n              <IconButton\n                onClick={handleClearFile}\n                disabled={isUploading}\n                color=\"error\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Box>\n          )}\n\n          {previewUrl && (\n            <Box\n              sx={{\n                mt: 3,\n                textAlign: \"center\",\n                backgroundColor: \"transparent\", // Remove background overlay\n                padding: \"10px\",\n              }}\n            >\n              <CardMedia\n                component=\"img\"\n                image={previewUrl}\n                alt=\"Preview\"\n                sx={{\n                  maxHeight: 300,\n                  maxWidth: \"100%\",\n                  objectFit: \"contain\",\n                  borderRadius: 1,\n                }}\n              />\n            </Box>\n          )}\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleUpload}\n            disabled={!file || isUploading}\n            fullWidth\n            sx={{\n              mt: 3,\n              py: 2,\n              background: \"#0097a7\", // Match the theme color\n              \"&:hover\": {\n                background: \"#007c8a\", // Darker shade on hover\n              },\n              borderRadius: 1.5,\n              boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\", // Subtle shadow\n            }}\n          >\n            {isUploading ? (\n              <>\n                Analyzing... {uploadProgress}%\n                <CircularProgress\n                  size={24}\n                  sx={{ color: \"white\", ml: 2 }}\n                  thickness={5}\n                />\n              </>\n            ) : (\n              \"Analyze Scan\"\n            )}\n          </Button>\n\n          {error && (\n            <Alert severity=\"error\" sx={{ mt: 2 }}>\n              {error}\n            </Alert>\n          )}\n        </Card>\n\n        <Card\n          sx={{\n            p: 3,\n            background: \"rgba(0, 0, 0, 0.6)\",\n            borderRadius: 2,\n            mt: 4,\n            boxShadow: \"0px 4px 15px rgba(0, 0, 0, 0.4)\",\n          }}\n        >\n          <Typography\n            variant=\"h6\"\n            gutterBottom\n            sx={{ color: colors.text, textAlign: \"center\" }}\n          >\n            Instructions\n          </Typography>\n          <ul style={{ paddingLeft: \"20px\", color: colors.text }}>\n            <li>Supported formats: DICOM (.dcm), NIfTI (.nii), JPEG/PNG</li>\n            <li>Minimum resolution: 128Ã—128 pixels</li>\n            <li>Maximum file size: 20MB</li>\n            <li>Analysis typically takes 10-30 seconds</li>\n          </ul>\n        </Card>\n\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          onClick={() => navigate(\"/evaluation-report\")}\n          sx={{\n            mt: 4,\n            background: colors.primary,\n            color: \"white\",\n            padding: \"10px 24px\",\n            fontSize: \"1rem\",\n            display: \"block\",\n            mx: \"auto\",\n            \"&:hover\": {\n              background: \"#0097a7\",\n            },\n          }}\n        >\n          Get Evaluation Report\n        </Button>\n        \n      </Box>\n    </Box>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}